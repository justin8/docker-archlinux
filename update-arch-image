#!/bin/bash
set -e

temp_docker_name="$(mktemp -u 'justin8/archlinux_temp_XXXXXXXXXX' | tr '[:upper:]' '[:lower:]')"
docker_name="justin8/archlinux"
tag="$(date +%Y.%m)"
script=$(mktemp)

cleanup() {
	rm "$script"
	docker rmi -f "$temp_docker_name" &> /dev/null
}

add_chroot_command() {
	local command="$1"
	sed -i "/# udev/s|^|arch-chroot \$ROOTFS $command\n|" "$script"
}

add_raw_command() {
	local command="$1"
	sed -i "/# udev/s|^|$command\n|" "$script"
}

get_script() {
	svn export --force https://github.com/docker/docker/trunk/contrib/mkimage-arch.sh "$script" > /dev/null

	# Set a trap after rootfs creation to cleanup if there is any errors to prevent filling temp
	sed -i '/ROOTFS=/s/$/\ntrap "rm -rf $ROOTFS" SIGINT SIGTERM/' "$script"
	# Change imported image name/tag
	sed -i "s|import - archlinux|import - $temp_docker_name:latest|" "$script"
	# Change test to run on new image name/tag
	sed -i "s|-t archlinux|--rm -t $temp_docker_name:latest|" "$script"
}

trap cleanup EXIT SIGINT SIGQUIT SIGTERM

if [[ $EUID -ne 0 ]]
then
	echo "You must run this as root!"
	exit 1
fi

get_script
add_chroot_command "curl -sO https://repo.dray.be/dray-repo-latest"
add_chroot_command "pacman -U --noconfirm dray-repo-latest"
add_chroot_command 'sed -i "s/^CheckSpace/#CheckSpace/" /etc/pacman.conf'
add_chroot_command 'dirmngr </dev/null'
add_raw_command "echo [multilib] >> \$ROOTFS/etc/pacman.conf"
add_raw_command "echo Include = /etc/pacman.d/mirrorlist >> \$ROOTFS/etc/pacman.conf"

bash -x "$script"

echo "Tagging as '$docker_name:$tag'"
docker tag -f "$temp_docker_name:latest" "$docker_name:$tag"

# Push if told to
if [[ $1 == push ]]
then
	echo "Tagging as '$docker_name:latest'"
	docker tag -f "$docker_name:$tag" "$docker_name:latest"
	echo "Pushing to repository..."
	docker push "${docker_name}:latest"
	docker push "${docker_name}:$tag"
fi

echo "new_version=$docker_name:$tag"
